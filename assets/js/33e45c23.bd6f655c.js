"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[1851],{3775:(e,n,s)=>{s.d(n,{A:()=>l});const t="resourceButton_UpEA",r="resourceButton__icon_vTKV",i="resourceButton__text_c_54";var o=s(74848);const l=function({children:e,link:n,style:s,icon:l,text:d=""}){return(0,o.jsx)("a",{href:n,style:s?.button,className:t,target:"_blank",children:l?(0,o.jsxs)(o.Fragment,{children:[l.element({style:s?.icon,className:r,size:l.size}),(0,o.jsx)("span",{className:i,style:s?.text,children:d})]}):e})}},15170:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(98027),r=s(3775),i=s(74848);const o=function({link:e,style:n,text:s="Source code"}){return(0,i.jsx)(r.A,{link:e,icon:{element:t.hL4,size:24},text:s,style:n})}},21217:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(3),r=s(3775),i=s(74848);const o=function({link:e,style:n,text:s="Code sandbox"}){return(0,i.jsx)(r.A,{link:e,icon:{element:t.Ypr,size:24},text:s,style:n})}},76785:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"operation/resolve-string","title":"resolveString","description":"Function that retrieves or resolves only string values. This function should handle various input types, resolving functions if encountered, and ultimately return an string if possible.","source":"@site/docs/operation/resolve-string.mdx","sourceDirName":"operation","slug":"/operation/resolve-string","permalink":"/shegit/docs/next/operation/resolve-string","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/docs/operation/resolve-string.mdx","tags":[{"inline":true,"label":"string","permalink":"/shegit/docs/next/tags/string"},{"inline":true,"label":"resolve","permalink":"/shegit/docs/next/tags/resolve"},{"inline":true,"label":"functions","permalink":"/shegit/docs/next/tags/functions"}],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11,"description":"Function that retrieves or resolves only string values. This function should handle various input types, resolving functions if encountered, and ultimately return an string if possible.","authors":["Shchegortzov Artem Mikhailovich"],"tags":["string","resolve","functions"],"keywords":["string","resolve","functions"],"version":"1.1.0"},"sidebar":"shegitSidebar","previous":{"title":"resolveSet","permalink":"/shegit/docs/next/operation/resolve-set"},"next":{"title":"Colors","permalink":"/shegit/docs/next/category/colors"}}');var r=s(74848),i=s(28453),o=s(15170);s(21217);const l={sidebar_position:11,description:"Function that retrieves or resolves only string values. This function should handle various input types, resolving functions if encountered, and ultimately return an string if possible.",authors:["Shchegortzov Artem Mikhailovich"],tags:["string","resolve","functions"],keywords:["string","resolve","functions"],version:"1.1.0"},d="resolveString",c={},h=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"resolvestring",children:"resolveString"})}),"\n",(0,r.jsx)(n.h2,{id:"using",children:"Using"}),"\n",(0,r.jsx)(n.p,{children:"Function that retrieves or resolves only string values.\r\nThis function should handle various input types, resolving functions if encountered, and ultimately return an string if possible."}),"\n",(0,r.jsxs)(n.p,{children:["If the final resolved value is not an string or if a function remains unresolved within the specified depth, the function return ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Argument"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"string"})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:"function"})]}),(0,r.jsx)(n.td,{children:"Value for resolve."}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"text"'})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:'() => () => "Shegit"'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"depth"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Depth of maximum resolve."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"undefined"})," \u2014 Returns the resolved string otherwise ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"resolveString('text');\r\n// \"text\"\r\n\r\nresolveString(() => () => 'name');\r\n// \"name\"\r\n\r\nresolveString(12);\r\n// undefined\r\n\r\nresolveString(() => 'Shegit', 1);\r\n// \"Shegit\"\r\n\r\nresolveString(() => 'Shegit', 2);\r\n// \"Shegit\"\r\n\r\nresolveString(() => 'Shegit', 0);\r\n// undefined\n"})}),"\n",(0,r.jsx)(n.h3,{id:"since",children:"Since"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/shegit/v/1.1.0",children:"1.1.0"})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsx)("div",{style:{display:"flex",gap:20},children:(0,r.jsx)(o.A,{link:"https://github.com/or-temka/shegit/tree/v1.1.0/src/functions/operation/resolveString"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);