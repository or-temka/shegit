"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[5376],{3775:(e,s,n)=>{n.d(s,{A:()=>i});const t="resourceButton_UpEA",o="resourceButton__icon_vTKV",r="resourceButton__text_c_54";var a=n(74848);const i=function({children:e,link:s,style:n,icon:i,text:d=""}){return(0,a.jsx)("a",{href:s,style:n?.button,className:t,target:"_blank",children:i?(0,a.jsxs)(a.Fragment,{children:[i.element({style:n?.icon,className:o,size:i.size}),(0,a.jsx)("span",{className:r,style:n?.text,children:d})]}):e})}},19253:(e,s,n)=>{n.d(s,{v:()=>o});const t="operation/",o={chunkArray:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${t}chunkArray`,codeSandboxLink:"https://codesandbox.io/p/sandbox/chunkarray-m6m7rx"},compareObjects:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${t}compareObjects`,codeSandboxLink:"https://codesandbox.io/p/sandbox/compareobjects-3dzc24"},deepCopy:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${t}deepCopy`,codeSandboxLink:"https://codesandbox.io/p/sandbox/deepcopy-sp4krp"},mapObjectKeys:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${t}mapObjectKeys`,codeSandboxLink:"https://codesandbox.io/p/sandbox/mapobjectkeys-5ct7gh"},mergeObjects:{versions:{created:"1.3.0",updated:"1.3.0",available:"1.3.0"},resourceLinkPath:`${t}mergeObjects`,codeSandboxLink:"https://codesandbox.io/p/sandbox/mergeobjects-q9ryyx"},resolveArray:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveArray`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvearray-qzxnjq"},resolveBoolean:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveBoolean`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveboolean-39zwxl"},resolveDate:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveDate`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvedate-7nxxt8"},resolveFunction:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveFunction`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvefunction-tcyfc3"},resolveMap:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveMap`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvemap-kv3c99"},resolveNumber:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveNumber`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvenumber-yk72xx"},resolveObject:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveObject`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveobject-d89psg"},resolveSet:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveSet`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveset-q959q2"},resolveString:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveString`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvestring-yrm88q"},resolveValue:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${t}resolveValue`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvevalue-2wqckz"}}},21217:(e,s,n)=>{n.d(s,{A:()=>a});var t=n(3),o=n(3775),r=n(74848);const a=function({link:e,style:s,text:n="Code sandbox"}){return(0,r.jsx)(o.A,{link:e,icon:{element:t.Ypr,size:24},text:n,style:s})}},54494:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,constants:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"operation/resolve-date","title":"resolve-date","description":"Function that retrieves or resolves only date values. This function should handle various input types, resolving functions if encountered, and ultimately return an date if possible.","source":"@site/versioned_docs/version-1.2.0/operation/resolve-date.mdx","sourceDirName":"operation","slug":"/operation/resolve-date","permalink":"/shegit/docs/1.2.0/operation/resolve-date","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/versioned_docs/version-1.2.0/operation/resolve-date.mdx","tags":[{"inline":true,"label":"date","permalink":"/shegit/docs/1.2.0/tags/date"},{"inline":true,"label":"resolve","permalink":"/shegit/docs/1.2.0/tags/resolve"},{"inline":true,"label":"functions","permalink":"/shegit/docs/1.2.0/tags/functions"}],"version":"1.2.0","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"description":"Function that retrieves or resolves only date values. This function should handle various input types, resolving functions if encountered, and ultimately return an date if possible.","authors":["Shchegortzov Artem Mikhailovich"],"tags":["date","resolve","functions"],"keywords":["date","resolve","functions"],"version":"1.1.0"},"sidebar":"shegitSidebar","previous":{"title":"resolve-boolean","permalink":"/shegit/docs/1.2.0/operation/resolve-boolean"},"next":{"title":"resolve-map","permalink":"/shegit/docs/1.2.0/operation/resolve-map"}}');var o=n(74848),r=n(28453),a=n(61134),i=(n(21217),n(19253));const d={sidebar_position:6,description:"Function that retrieves or resolves only date values. This function should handle various input types, resolving functions if encountered, and ultimately return an date if possible.",authors:["Shchegortzov Artem Mikhailovich"],tags:["date","resolve","functions"],keywords:["date","resolve","functions"],version:"1.1.0"},l="resolveDate",c={},h=i.v.resolveDate,u=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function v(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"resolvedate",children:"resolveDate"})}),"\n",(0,o.jsx)(s.h2,{id:"using",children:"Using"}),"\n",(0,o.jsx)(s.p,{children:"Function that retrieves or resolves only date values.\r\nThis function should handle various input types, resolving functions if encountered, and ultimately return an date if possible."}),"\n",(0,o.jsxs)(s.p,{children:["If the final resolved value is not an date or if a function remains unresolved within the specified depth, the function return ",(0,o.jsx)(s.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(s.table,{children:[(0,o.jsx)(s.thead,{children:(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.th,{children:"Argument"}),(0,o.jsx)(s.th,{children:"Type"}),(0,o.jsx)(s.th,{children:"Description"}),(0,o.jsx)(s.th,{children:"Example"})]})}),(0,o.jsxs)(s.tbody,{children:[(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:(0,o.jsx)(s.code,{children:"value"})}),(0,o.jsxs)(s.td,{children:[(0,o.jsx)(s.code,{children:"date"})," ",(0,o.jsx)("br",{})," ",(0,o.jsx)(s.code,{children:"function"})]}),(0,o.jsx)(s.td,{children:"Value for resolve."}),(0,o.jsxs)(s.td,{children:[(0,o.jsx)(s.code,{children:"new Date()"})," ",(0,o.jsx)("br",{})," ",(0,o.jsx)(s.code,{children:"() => () => new Date('2024-05-01')"})]})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:(0,o.jsx)(s.code,{children:"depth"})}),(0,o.jsx)(s.td,{children:(0,o.jsx)(s.code,{children:"number"})}),(0,o.jsx)(s.td,{children:"Depth of maximum resolve."}),(0,o.jsx)(s.td,{children:(0,o.jsx)(s.code,{children:"2"})})]})]})]}),"\n",(0,o.jsx)(s.h3,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"date"})," | ",(0,o.jsx)(s.code,{children:"undefined"})," \u2014 Returns the resolved date otherwise ",(0,o.jsx)(s.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"resolveDate(new Date('2024-12-25'));\r\n// Date object for 2024-12-25\r\n\r\nresolveDate(() => () => new Date('2025-01-13'));\r\n// Date object for 2025-01-13\r\n\r\nresolveDate('text');\r\n// undefined\r\n\r\nresolveDate(() => new Date('1990-07-03'), 1);\r\n// Date object for 1990-07-03\r\n\r\nresolveDate(() => new Date('1990-07-03'), 2);\r\n// Date object for 1990-07-03\r\n\r\nresolveDate(() => new Date('1990-07-03'), 0);\r\n// undefined\n"})}),"\n",(0,o.jsx)(s.h3,{id:"since",children:"Since"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.npmjs.com/package/shegit/v/1.1.0",children:"1.1.0"})}),"\n",(0,o.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsx)("div",{style:{display:"flex",gap:20},children:(0,o.jsx)(a.A,{linkPath:h.resourceLinkPath})})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(v,{...e})}):v(e)}},61134:(e,s,n)=>{n.d(s,{A:()=>a});var t=n(98027),o=n(3775);var r=n(74848);const a=function({linkPath:e,style:s,text:n="Source code"}){return(0,r.jsx)(o.A,{link:"https://github.com/or-temka/shegit/tree/main/src/functions/"+e,icon:{element:t.hL4,size:24},text:n,style:s})}}}]);