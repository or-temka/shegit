"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[2669],{2078:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bk:()=>getInputsValByArgs,Uf:()=>getFormattedAgsValues,kf:()=>getStyleForArgumentInput});var shegit_beta__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(86260),shegit_beta__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(shegit_beta__WEBPACK_IMPORTED_MODULE_0__);function getInputsValByArgs(e){const t={};return e.forEach(e=>{t[e.name]=e.initial||""}),t}const getFormattedAgsValues=(argsValue,args)=>argsValue.map((v,index)=>"function"===args[index].type?(0,shegit_beta__WEBPACK_IMPORTED_MODULE_0__.isEmpty)(v)?eval(args[index].default):eval(v):v),getStyleForArgumentInput=e=>{const t=e.style;return t?{maxWidth:t.width||void 0}:{}}},3775:(e,t,n)=>{n.d(t,{A:()=>c});const r="resourceButton_UpEA",s="resourceButton__icon_vTKV",i="resourceButton__text_c_54";var a=n(74848);const c=function({children:e,link:t,style:n,icon:c,text:o=""}){return(0,a.jsx)("a",{href:t,style:n?.button,className:r,target:"_blank",children:c?(0,a.jsxs)(a.Fragment,{children:[c.element({style:n?.icon,className:s,size:c.size}),(0,a.jsx)("span",{className:i,style:n?.text,children:o})]}):e})}},12043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"operation/merge-objects","title":"mergeObjects","description":"Deeply merges two plain objects","source":"@site/docs/operation/merge-objects.mdx","sourceDirName":"operation","slug":"/operation/merge-objects","permalink":"/shegit/docs/next/operation/merge-objects","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/docs/operation/merge-objects.mdx","tags":[{"inline":true,"label":"copy","permalink":"/shegit/docs/next/tags/copy"},{"inline":true,"label":"deep","permalink":"/shegit/docs/next/tags/deep"},{"inline":true,"label":"merge","permalink":"/shegit/docs/next/tags/merge"},{"inline":true,"label":"object","permalink":"/shegit/docs/next/tags/object"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Deeply merges two plain objects","authors":["Shchegortzov Artem Mikhailovich"],"tags":["copy","deep","merge","object"],"keywords":["copy","deep","merge","object"],"version":"1.3.0"},"sidebar":"shegitSidebar","previous":{"title":"mapObjectKeys","permalink":"/shegit/docs/next/operation/map-object-keys"},"next":{"title":"chunkArray","permalink":"/shegit/docs/next/operation/chunk-array"}}');var s=n(74848),i=n(28453),a=n(15170),c=(n(21217),n(86804)),o=n(86260);const l={sidebar_position:1,description:"Deeply merges two plain objects",authors:["Shchegortzov Artem Mikhailovich"],tags:["copy","deep","merge","object"],keywords:["copy","deep","merge","object"],version:"1.3.0"},d="mergeObjects",h={},u=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"mergeobjects",children:"mergeObjects"})}),"\n",(0,s.jsx)(t.h2,{id:"using",children:"Using"}),"\n",(0,s.jsx)(t.p,{children:"Deeply merges two plain objects. Properties from the first object take precedence over the second."}),"\n",(0,s.jsx)(t.p,{children:"Returns a new merged object without mutating the inputs."}),"\n",(0,s.jsx)(c.A,{name:"mergeObjects",func:o.mergeObjects,args:[{name:"obj1",initial:'{ "a": 1, "b": 2, "c": 3 }',style:{width:300}},{name:"obj2",initial:'{ "a": 1, "b": 5, "d": 9 }',style:{width:300}}]}),"\n",(0,s.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Argument"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"obj1"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"object"})}),(0,s.jsx)(t.td,{children:"The primary object whose properties take priority."}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"{}"})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:'{ some: "any" }'})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"obj1"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"object"})}),(0,s.jsx)(t.td,{children:"The secondary object whose properties are merged if not present in obj1."}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"{}"})," ",(0,s.jsx)("br",{})," ",(0,s.jsx)(t.code,{children:'{ value: "3", c: false }'})]})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"object"})," \u2014 A new object containing all properties from obj1 and obj2, with obj1's values overriding."]}),"\n",(0,s.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// Basic merge:\r\nmergeObjects(\r\n  { a: 1, b: 2 },\r\n  { b: 3, c: 4 }\r\n);\r\n// { a: 1, b: 2, c: 4 }\r\n\r\n// Deep merge nested objects:\r\nmergeObjects(\r\n  { nested: { x: 10, y: 20 } },\r\n  { nested: { y: 30, z: 40 }, extra: 5 }\r\n);\r\n// { nested: { x: 10, y: 20, z: 40 }, extra: 5 }\r\n\r\n// Merge arrays and additional properties:\r\nmergeObjects(\r\n  { list: [1, 2] },\r\n  { list: [3, 4], meta: { valid: true }\r\n});\r\n// { list: [1, 2], meta: { valid: true } }\r\n\r\n// Merge with Map and Set:\r\nconst map1 = new Map([['a', 1]]);\r\nconst set2 = new Set([2, 3]);\r\nmergeObjects(\r\n  { data: map1, tags: new Set(['x']) },\r\n  { data: new Map([['b', 2]]), tags: set2 }\r\n);\r\n// { data: Map { 'a' => 1, 'b' => 2 }, tags: Set { 'x', 2, 3 } }\r\n\r\n// Deep merge with multi-level nesting and arrays:\r\nmergeObjects(\r\n  { config: { levels: [{ id: 1, val: 'one' }] } },\r\n  { config: { levels: [{ id: 2, val: 'two' }], debug: true } },\r\n);\r\n// { config: { levels: [{ id: 1, val: 'one' }], debug: true } }\n"})}),"\n",(0,s.jsx)(t.h3,{id:"since",children:"Since"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/or-temka/shegit/tree/dev-v1.3.0",children:"1.3.0"})}),"\n",(0,s.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsx)("div",{style:{display:"flex",gap:20},children:(0,s.jsx)(a.A,{link:"https://github.com/or-temka/shegit/tree/dev-v1.3.0/src/functions/operation/mergeObjects"})})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},15170:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(98027),s=n(3775),i=n(74848);const a=function({link:e,style:t,text:n="Source code"}){return(0,i.jsx)(s.A,{link:e,icon:{element:r.hL4,size:24},text:n,style:t})}},21217:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(3),s=n(3775),i=n(74848);const a=function({link:e,style:t,text:n="Code sandbox"}){return(0,i.jsx)(s.A,{link:e,icon:{element:r.Ypr,size:24},text:n,style:t})}},86804:(e,t,n)=>{n.d(t,{A:()=>c});var r=n(96540);const s={container:"container_E34R",label:"label_iPal",code:"code_fQjP",codeContainer:"codeContainer_jsLi",functionInput:"functionInput_QCuv",inputContainer:"inputContainer_HaWK",input:"input_JQ5l",resultContainer:"resultContainer_F5Yb"};var i=n(2078),a=n(74848);const c=function({name:e,func:t=()=>{},args:n,label:c="Demo - use JSON"}){const[o,l]=(0,r.useState)((0,i.Bk)(n)),[d,h]=(0,r.useState)(!1);return(0,a.jsxs)("div",{className:s.container,children:[(0,a.jsx)("span",{className:s.label,style:{background:d?"rgb(216,106,93)":void 0},children:d?"\u043e\u0448\u0438\u0431\u043a\u0430":c}),(0,a.jsx)("pre",{className:[s.code,s.codeContainer].join(" "),children:(0,a.jsxs)("span",{className:s.functionInput,children:[e||t.name,"(",(0,a.jsx)(a.Fragment,{children:n?.map((e,t)=>{const r=t<n.length-1;return(0,a.jsxs)("div",{className:s.inputContainer,children:[(0,a.jsx)("input",{placeholder:e.name,className:s.input,value:o[e.name],onChange:t=>((e,t)=>{let n=e.target.value;"number"===t.type&&(n=Number.isNaN(+n)||""===n?void 0:n),l(e=>({...e,[t.name]:n}))})(t,e),style:(0,i.kf)(e)})," ",r&&","]},t)})}),")"]})}),(0,a.jsx)("pre",{className:[s.code,s.resultContainer].join(" "),children:(()=>{const e=(()=>{try{return n.map(e=>JSON.parse(o[e.name]||e.default||null))}catch(e){return[]}})();try{const r=t(...(0,i.Uf)(e,n)),s=void 0!==r?(0,a.jsx)(a.Fragment,{children:JSON.stringify(r)}):(0,a.jsx)(a.Fragment,{children:"undefined"});return d&&h(!1),s}catch(r){return console.error(r),d||h(!0),(0,a.jsx)(a.Fragment,{children:'"Error"'})}})()})]})}}}]);