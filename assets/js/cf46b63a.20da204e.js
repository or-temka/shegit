"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[1658],{3775:(e,r,s)=>{s.d(r,{A:()=>i});const n="resourceButton_UpEA",o="resourceButton__icon_vTKV",a="resourceButton__text_c_54";var t=s(74848);const i=function({children:e,link:r,style:s,icon:i,text:d=""}){return(0,t.jsx)("a",{href:r,style:s?.button,className:n,target:"_blank",children:i?(0,t.jsxs)(t.Fragment,{children:[i.element({style:s?.icon,className:o,size:i.size}),(0,t.jsx)("span",{className:a,style:s?.text,children:d})]}):e})}},19253:(e,r,s)=>{s.d(r,{v:()=>o});const n="operation/",o={chunkArray:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${n}chunkArray`,codeSandboxLink:"https://codesandbox.io/p/sandbox/chunkarray-m6m7rx"},compareObjects:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${n}compareObjects`,codeSandboxLink:"https://codesandbox.io/p/sandbox/compareobjects-3dzc24"},deepCopy:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${n}deepCopy`,codeSandboxLink:"https://codesandbox.io/p/sandbox/deepcopy-sp4krp"},mapObjectKeys:{versions:{created:"1.2.0",updated:"1.2.0",available:"1.3.0"},resourceLinkPath:`${n}mapObjectKeys`,codeSandboxLink:"https://codesandbox.io/p/sandbox/mapobjectkeys-5ct7gh"},mergeObjects:{versions:{created:"1.3.0",updated:"1.3.0",available:"1.3.0"},resourceLinkPath:`${n}mergeObjects`,codeSandboxLink:"https://codesandbox.io/p/sandbox/mergeobjects-q9ryyx"},resolveArray:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveArray`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvearray-qzxnjq"},resolveBoolean:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveBoolean`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveboolean-39zwxl"},resolveDate:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveDate`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvedate-7nxxt8"},resolveFunction:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveFunction`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvefunction-tcyfc3"},resolveMap:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveMap`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvemap-kv3c99"},resolveNumber:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveNumber`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvenumber-yk72xx"},resolveObject:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveObject`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveobject-d89psg"},resolveSet:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveSet`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolveset-q959q2"},resolveString:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveString`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvestring-yrm88q"},resolveValue:{versions:{created:"1.1.0",updated:"1.1.0",available:"1.3.0"},resourceLinkPath:`${n}resolveValue`,codeSandboxLink:"https://codesandbox.io/p/sandbox/resolvevalue-2wqckz"}}},21217:(e,r,s)=>{s.d(r,{A:()=>t});var n=s(3),o=s(3775),a=s(74848);const t=function({link:e,style:r,text:s="Code sandbox"}){return(0,a.jsx)(o.A,{link:e,icon:{element:n.Ypr,size:24},text:s,style:r})}},61134:(e,r,s)=>{s.d(r,{A:()=>t});var n=s(98027),o=s(3775);var a=s(74848);const t=function({linkPath:e,style:r,text:s="Source code"}){return(0,a.jsx)(o.A,{link:"https://github.com/or-temka/shegit/tree/main/src/functions/"+e,icon:{element:n.hL4,size:24},text:s,style:r})}},96038:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,constants:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"operation/resolve-array","title":"resolve-array","description":"Function that retrieves or resolves only array values. This function should handle various input types, resolving functions if encountered, and ultimately return an array if possible.","source":"@site/versioned_docs/version-1.2.0/operation/resolve-array.mdx","sourceDirName":"operation","slug":"/operation/resolve-array","permalink":"/shegit/docs/1.2.0/operation/resolve-array","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/versioned_docs/version-1.2.0/operation/resolve-array.mdx","tags":[{"inline":true,"label":"array","permalink":"/shegit/docs/1.2.0/tags/array"},{"inline":true,"label":"resolve","permalink":"/shegit/docs/1.2.0/tags/resolve"},{"inline":true,"label":"functions","permalink":"/shegit/docs/1.2.0/tags/functions"}],"version":"1.2.0","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"description":"Function that retrieves or resolves only array values. This function should handle various input types, resolving functions if encountered, and ultimately return an array if possible.","authors":["Shchegortzov Artem Mikhailovich"],"tags":["array","resolve","functions"],"keywords":["array","resolve","functions"],"version":"1.1.0"},"sidebar":"shegitSidebar","previous":{"title":"resolve-function","permalink":"/shegit/docs/1.2.0/operation/resolve-function"},"next":{"title":"resolve-boolean","permalink":"/shegit/docs/1.2.0/operation/resolve-boolean"}}');var o=s(74848),a=s(28453),t=s(61134),i=(s(21217),s(19253));const d={sidebar_position:4,description:"Function that retrieves or resolves only array values. This function should handle various input types, resolving functions if encountered, and ultimately return an array if possible.",authors:["Shchegortzov Artem Mikhailovich"],tags:["array","resolve","functions"],keywords:["array","resolve","functions"],version:"1.1.0"},l="resolveArray",c={},h=i.v.resolveArray,u=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function v(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"resolvearray",children:"resolveArray"})}),"\n",(0,o.jsx)(r.h2,{id:"using",children:"Using"}),"\n",(0,o.jsx)(r.p,{children:"Function that retrieves or resolves only array values.\r\nThis function should handle various input types, resolving functions if encountered, and ultimately return an array if possible."}),"\n",(0,o.jsxs)(r.p,{children:["If the final resolved value is not an array or if a function remains unresolved within the specified depth, the function return ",(0,o.jsx)(r.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Argument"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"}),(0,o.jsx)(r.th,{children:"Example"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"value"})}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"array"})," ",(0,o.jsx)("br",{})," ",(0,o.jsx)(r.code,{children:"function"})]}),(0,o.jsx)(r.td,{children:"Value for resolve."}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"[13, false]"})," ",(0,o.jsx)("br",{})," ",(0,o.jsx)(r.code,{children:"() => () => [undefined]"})]})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"depth"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"number"})}),(0,o.jsx)(r.td,{children:"Depth of maximum resolve."}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"2"})})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"array"})," | ",(0,o.jsx)(r.code,{children:"undefined"})," \u2014 Returns the resolved array otherwise ",(0,o.jsx)(r.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:"resolveArray([12, null]);\r\n// [12, null]\r\n\r\nresolveArray(() => () => [false, { name: 'Alina' }]);\r\n// [false, { name: 'Alina' }]\r\n\r\nresolveArray('text');\r\n// undefined\r\n\r\nresolveArray(() => ['text'], 1);\r\n// ['text']\r\n\r\nresolveArray(() => ['text'], 2);\r\n// ['text']\r\n\r\nresolveArray(() => ['text'], 0);\r\n// undefined\n"})}),"\n",(0,o.jsx)(r.h3,{id:"since",children:"Since"}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"https://www.npmjs.com/package/shegit/v/1.1.0",children:"1.1.0"})}),"\n",(0,o.jsx)(r.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsx)("div",{style:{display:"flex",gap:20},children:(0,o.jsx)(t.A,{linkPath:h.resourceLinkPath})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(v,{...e})}):v(e)}}}]);