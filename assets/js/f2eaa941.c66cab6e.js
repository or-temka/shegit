"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[3502],{4630:(e,n,s)=>{s.d(n,{A:()=>o});const t="resourceButton_UpEA",r="resourceButton__icon_vTKV",i="resourceButton__text_c_54";var l=s(4848);const o=function(e){let{children:n,link:s,style:o,icon:d,text:c=""}=e;return(0,l.jsx)("a",{href:s,style:o?.button,className:t,target:"_blank",children:d?(0,l.jsxs)(l.Fragment,{children:[d.element({style:o?.icon,className:r,size:d.size}),(0,l.jsx)("span",{className:i,style:o?.text,children:c})]}):n})}},5967:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"operation/resolve-set","title":"resolveSet","description":"Function that retrieves or resolves only Set values. This function should handle various input types, resolving functions if encountered, and ultimately return an Set if possible.","source":"@site/versioned_docs/version-1.1.0/operation/resolve-set.mdx","sourceDirName":"operation","slug":"/operation/resolve-set","permalink":"/shegit/docs/operation/resolve-set","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/versioned_docs/version-1.1.0/operation/resolve-set.mdx","tags":[{"inline":true,"label":"set","permalink":"/shegit/docs/tags/set"},{"inline":true,"label":"resolve","permalink":"/shegit/docs/tags/resolve"},{"inline":true,"label":"functions","permalink":"/shegit/docs/tags/functions"}],"version":"1.1.0","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"description":"Function that retrieves or resolves only Set values. This function should handle various input types, resolving functions if encountered, and ultimately return an Set if possible.","authors":["Shchegortzov Artem Mikhailovich"],"tags":["set","resolve","functions"],"keywords":["set","resolve","functions"],"version":"1.1.0"},"sidebar":"shegitSidebar","previous":{"title":"resolveObject","permalink":"/shegit/docs/operation/resolve-object"},"next":{"title":"resolveString","permalink":"/shegit/docs/operation/resolve-string"}}');var r=s(4848),i=s(8453),l=s(7123);s(7314);const o={sidebar_position:9,description:"Function that retrieves or resolves only Set values. This function should handle various input types, resolving functions if encountered, and ultimately return an Set if possible.",authors:["Shchegortzov Artem Mikhailovich"],tags:["set","resolve","functions"],keywords:["set","resolve","functions"],version:"1.1.0"},d="resolveSet",c={},a=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"resolveset",children:"resolveSet"})}),"\n",(0,r.jsx)(n.h2,{id:"using",children:"Using"}),"\n",(0,r.jsx)(n.p,{children:"Function that retrieves or resolves only Set values.\r\nThis function should handle various input types, resolving functions if encountered, and ultimately return an Set if possible."}),"\n",(0,r.jsxs)(n.p,{children:["If the final resolved value is not an Set or if a function remains unresolved within the specified depth, the function return ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Argument"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Set"})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:"function"})]}),(0,r.jsx)(n.td,{children:"Value for resolve."}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"new Set()"})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:'() => () => new Set(["value1", "value2"])'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"depth"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Depth of maximum resolve."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Set"})," | ",(0,r.jsx)(n.code,{children:"undefined"})," \u2014 Returns the resolved Set otherwise ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"resolveSet(new Set());\r\n// Set {}\r\n\r\nresolveSet(() => () => new Set(['value1', 'value2']));\r\n// Set { \"value1\", \"value2\" }\r\n\r\nresolveSet('text');\r\n// undefined\r\n\r\nresolveSet(() => new Set(['name', 0]), 1);\r\n// Set { \"name\", 0 }\r\n\r\nresolveSet(() => new Set(['name', 0]), 2);\r\n// Set { \"name\", 0 }\r\n\r\nresolveSet(() => new Set(['name', 0]), 0);\r\n// undefined\n"})}),"\n",(0,r.jsx)(n.h3,{id:"since",children:"Since"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/shegit/v/1.1.0",children:"1.1.0"})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsx)("div",{style:{display:"flex",gap:20},children:(0,r.jsx)(l.A,{link:"https://github.com/or-temka/shegit/tree/v1.1.0/src/functions/operation/resolveSet"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7123:(e,n,s)=>{s.d(n,{A:()=>l});var t=s(8027),r=s(4630),i=s(4848);const l=function(e){let{link:n,style:s,text:l="Source code"}=e;return(0,i.jsx)(r.A,{link:n,icon:{element:t.hL4,size:24},text:l,style:s})}},7314:(e,n,s)=>{s.d(n,{A:()=>l});var t=s(3),r=s(4630),i=s(4848);const l=function(e){let{link:n,style:s,text:l="Code sandbox"}=e;return(0,i.jsx)(r.A,{link:n,icon:{element:t.Ypr,size:24},text:l,style:s})}}}]);