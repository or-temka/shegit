"use strict";(self.webpackChunkshegit=self.webpackChunkshegit||[]).push([[5383],{254:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"operation/resolve-object","title":"resolveObject","description":"Function that retrieves or resolves only object values. This function should handle various input types, resolving functions if encountered, and ultimately return an object if possible.","source":"@site/versioned_docs/version-1.1.0/operation/resolve-object.mdx","sourceDirName":"operation","slug":"/operation/resolve-object","permalink":"/shegit/docs/operation/resolve-object","draft":false,"unlisted":false,"editUrl":"https://github.com/or-temka/shegit/tree/docs/versioned_docs/version-1.1.0/operation/resolve-object.mdx","tags":[{"inline":true,"label":"object","permalink":"/shegit/docs/tags/object"},{"inline":true,"label":"resolve","permalink":"/shegit/docs/tags/resolve"},{"inline":true,"label":"functions","permalink":"/shegit/docs/tags/functions"}],"version":"1.1.0","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"description":"Function that retrieves or resolves only object values. This function should handle various input types, resolving functions if encountered, and ultimately return an object if possible.","authors":["Shchegortzov Artem Mikhailovich"],"tags":["object","resolve","functions"],"keywords":["object","resolve","functions"],"version":"1.1.0"},"sidebar":"shegitSidebar","previous":{"title":"resolveNumber","permalink":"/shegit/docs/operation/resolve-number"},"next":{"title":"resolveSet","permalink":"/shegit/docs/operation/resolve-set"}}');var r=s(4848),i=s(8453),o=s(7199),l=(s(3628),s(6232)),c=s(9777);const a={sidebar_position:8,description:"Function that retrieves or resolves only object values. This function should handle various input types, resolving functions if encountered, and ultimately return an object if possible.",authors:["Shchegortzov Artem Mikhailovich"],tags:["object","resolve","functions"],keywords:["object","resolve","functions"],version:"1.1.0"},d="resolveObject",h={},u=[{value:"Using",id:"using",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Since",id:"since",level:3},{value:"Resources",id:"resources",level:2}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"resolveobject",children:"resolveObject"})}),"\n",(0,r.jsx)(n.h2,{id:"using",children:"Using"}),"\n",(0,r.jsx)(n.p,{children:"Function that retrieves or resolves only object values.\r\nThis function should handle various input types, resolving functions if encountered, and ultimately return an object if possible."}),"\n",(0,r.jsxs)(n.p,{children:["If the final resolved value is not an object or if a function remains unresolved within the specified depth, the function return ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(l.A,{name:"resolveObject",func:c.resolveObject,args:[{name:"value",default:'{ "package": "shegit" }'},{name:"depth",default:"0"}]}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Argument"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"object"})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:"function"})]}),(0,r.jsx)(n.td,{children:"Value for resolve."}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"{}"})," ",(0,r.jsx)("br",{})," ",(0,r.jsx)(n.code,{children:'() => () => { name: "Alina" }'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"depth"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Depth of maximum resolve."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"object"})," | ",(0,r.jsx)(n.code,{children:"undefined"})," \u2014 Returns the resolved object otherwise ",(0,r.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"resolveObject({ some: true });\r\n// { some: true }\r\n\r\nresolveObject(() => () => ({ name: 'Alina' }));\r\n// { name: 'Alina' }\r\n\r\nresolveObject(['text', 12]);\r\n// undefined\r\n\r\nresolveObject(() => ({ package: shegit }), 1);\r\n// { package: shegit }\r\n\r\nresolveObject(() => ({ package: shegit }), 2);\r\n// { package: shegit }\r\n\r\nresolveObject(() => ({ package: shegit }), 0);\r\n// undefined\n"})}),"\n",(0,r.jsx)(n.h3,{id:"since",children:"Since"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/shegit/v/1.1.0",children:"1.1.0"})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsx)("div",{style:{display:"flex",gap:20},children:(0,r.jsx)(o.A,{link:"https://github.com/or-temka/shegit/tree/v1.1.0/src/functions/operation/resolveObject"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},6232:(e,n,s)=>{s.d(n,{A:()=>o});var t=s(6540);const r={container:"container_E34R",label:"label_iPal",code:"code_fQjP",codeContainer:"codeContainer_jsLi",functionInput:"functionInput_QCuv",inputContainer:"inputContainer_HaWK",input:"input_JQ5l",resultContainer:"resultContainer_F5Yb"};var i=s(4848);const o=function(e){let{name:n,func:s=()=>{},args:o,label:l="Demo"}=e;const[c,a]=(0,t.useState)(function(e){const n={};return e.forEach((e=>{n[e.name]=e.default||""})),n}(o));return(0,i.jsxs)("div",{className:r.container,children:[(0,i.jsx)("span",{className:r.label,children:l}),(0,i.jsx)("pre",{className:[r.code,r.codeContainer].join(" "),children:(0,i.jsxs)("span",{className:r.functionInput,children:[n||s.name,"(",(0,i.jsx)(i.Fragment,{children:o?.map(((e,n)=>{const s=n<o.length-1;return(0,i.jsxs)("div",{className:r.inputContainer,children:[(0,i.jsx)("input",{placeholder:e.name,className:r.input,value:c[e.name],onChange:n=>a((s=>({...s,[e.name]:n.target.value})))})," ",s&&","]},n)}))}),")"]})}),(0,i.jsx)("pre",{className:[r.code,r.resultContainer].join(" "),children:(()=>{const e=(()=>{try{return o.map((e=>JSON.parse(c[e.name]||null)))}catch(e){return[]}})();return(0,i.jsx)(i.Fragment,{children:JSON.stringify(s(...e))})})()})]})}}}]);